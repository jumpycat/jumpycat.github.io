<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jumpycat.github.io</id>
    <title>Jumpycat</title>
    <updated>2019-11-22T06:26:34.610Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jumpycat.github.io"/>
    <link rel="self" href="https://jumpycat.github.io/atom.xml"/>
    <subtitle>去你妈的</subtitle>
    <logo>https://jumpycat.github.io/images/avatar.png</logo>
    <icon>https://jumpycat.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Jumpycat</rights>
    <entry>
        <title type="html"><![CDATA[做视频二分类时的读数据工具]]></title>
        <id>https://jumpycat.github.io/post/zuo-shi-pin-er-fen-lei-shi-de-du-shu-ju-gong-ju</id>
        <link href="https://jumpycat.github.io/post/zuo-shi-pin-er-fen-lei-shi-de-du-shu-ju-gong-ju">
        </link>
        <updated>2019-11-22T05:58:45.000Z</updated>
        <content type="html"><![CDATA[<pre><code>import os
import cv2
import numpy as np
import random

&quot;读数据的代码段，给一个文件夹 下面包含real/fake两个大文件夹&quot;
&quot;在下面各自是video里面的帧图像&quot;
&quot;mode 0是返回视频结构(sample,frame,height,width,channel)&quot;
&quot;mode 1 返回图像结构（images，height,width,channel)&quot;
&quot;结果均是shuffle后的&quot;
&quot;1/255归一化&quot;

#fake and real totally
def ReadPath_shuffle(path,video_n):
    path_list = []
    for root,dirs,files in os.walk(path):
        for file in dirs:
            path_list.append(os.path.join(root,file))
    path_list.remove(path_list[0])
    path_list.remove(path_list[0])
    random.shuffle(path_list)
    return path_list[:video_n] #return paths of video_frame folder

def ReadPic_shuffle(pth):
    file_list = []
    for root,dirs,files in os.walk(pth):
        files.sort(key= lambda x:int(x[:-4]))
        for file in files:
            file_list.append(os.path.join(root,file))
    return file_list #paths of frames in video_frame folder

def CreatData_shuffle(path,video_n,frame_n,mode):
#model represents video or image classification
    if mode == 0:
        video_frame = [] #2-D list[video[frame]]
        label = []
        path_list = ReadPath_shuffle(path,video_n)
        for pth in path_list:
            if 'fake' in pth:
                label.append(0)
            else:
                label.append(1)
            pths = ReadPic_shuffle(pth)
            video_frame.append(pths)
        video_n = len(video_frame)
        img = cv2.imread(video_frame[0][0])
        shape_1,shape_2,shape_3 = img.shape
        data = np.zeros((video_n,frame_n,shape_1,shape_2,shape_3))
        for i in range(video_n):
            for j in range(frame_n):
                img = cv2.imread(video_frame[i][j])/255.0
                data[i][j][:,:,:] = img[:,:,:]
        label = np.array(label)
        return data,label,frame_n,shape_1,shape_2,shape_3

    if mode == 1:
        video_frame_total = []  # 1-D list[video_frames]
        label = []
        path_list = ReadPath_shuffle(path, video_n)

        for pth in path_list:
            pths = ReadPic_shuffle(pth)[:frame_n]
            video_frame_total += pths

        random.shuffle(video_frame_total)
        for frame_pth in video_frame_total:
            if 'fake' in frame_pth:
                label.append(0)
            else:
                label.append(1)

        image_n = len(video_frame_total)
        img = cv2.imread(video_frame_total[0])
        shape_1, shape_2, shape_3 = img.shape
        data = np.zeros((image_n, shape_1, shape_2, shape_3))
        print(image_n)
        for i in range(image_n):
                img = cv2.imread(video_frame_total[i]) / 255.0
                data[i][:, :, :] = img[:, :, :]
        label = np.array(label)
        return data, label, image_n, shape_1, shape_2, shape_3
        ```</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello World]]></title>
        <id>https://jumpycat.github.io/post/hello-world</id>
        <link href="https://jumpycat.github.io/post/hello-world">
        </link>
        <updated>2019-10-10T01:27:44.000Z</updated>
        <content type="html"><![CDATA[<p>##Hello World</p>
]]></content>
    </entry>
</feed>